name: Build & Publish docker image for DAGMC-CI

on:
  # allows us to run workflows manually
  workflow_dispatch:
  push:
    paths:
      - 'CI/?ocker**'
      - '.github/workflows/docker_publish.yml'


jobs:
  build-base-img:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu_versions : [
          18.04,
          20.04,
          ]
    name: Ubuntu ${{ matrix.ubuntu_versions }} basics deps

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Export Dockerfile_0_base
        uses: docker/build-push-action@v3
        with:
          file: CI/Dockerfile
          target: base
          push: true
          context: .
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
          tags: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}:ci_testing

  build-housekeeping-img:
    needs: build-base-img
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir
    strategy:
      matrix:
        ubuntu_versions : [18.04,]

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push Dockerfile_1_housekeeping
        uses: docker/build-push-action@v3
        with:
          file: CI/Dockerfile_1_housekeeping
          context: .
          push: true
          build-args: |
            OWNER=${{ github.repository_owner }}
            TAG=ci_testing
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
          tags: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping:ci_testing


  build-deps-img:
    needs: build-base-img
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu_versions : [
          18.04,
          20.04,
          ]
        compiler : [
          gcc,
          clang,
          ]
        hdf5_versions : [
          1.10.4,
        ]

    name: Ubuntu ${{ matrix.ubuntu_versions }} + ${{ matrix.compiler }} hdf5 ${{ matrix.hdf5_versions }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push Dockerfile_1_external_deps
        uses: docker/build-push-action@v3
        with:
          file: CI/Dockerfile
          target: external_deps
          context: .
          push: false
          build-args: |
            OWNER=${{ github.repository_owner }}
            TAG=ci_testing
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
            COMPILER=${{ matrix.compiler }}
          tags: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext:ci_testing

      - name: Build and export Dockerfile_2_hdf5
        uses: docker/build-push-action@v3
        with:
          file: CI/Dockerfile
          target: hdf5
          context: .
          push: true
          build-args: |
            OWNER=${{ github.repository_owner }}
            TAG=ci_testing
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
            COMPILER=${{ matrix.compiler }}
            HDF5=${{ matrix.hdf5_versions }}
          tags: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}:ci_testing

  build-moab-img:
    needs: build-deps-img
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir
    strategy:
      matrix:
        ubuntu_versions : [
          18.04,
          20.04,
          ]
        compiler : [
          gcc,
          clang,
          ]
        hdf5_versions : [
          1.10.4,
        ]
        moab_versions : [
          5.3.0,
          develop,
          master,
        ]

    name: Ubuntu ${{ matrix.ubuntu_versions }} + ${{ matrix.compiler }} hdf5 ${{ matrix.hdf5_versions }} + Moab ${{ matrix.moab_versions }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push Dockerfile_3_moab
        uses: docker/build-push-action@v3
        with:
          file: CI/Dockerfile
          target: moab
          context: .
          push: true
          build-args: |
            OWNER=${{ github.repository_owner }}
            TAG=ci_testing
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
            COMPILER=${{ matrix.compiler }}
            HDF5=${{ matrix.hdf5_versions }}
            MOAB=${{ matrix.moab_versions }}
          tags: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}:ci_testing

  housekeeping:
    if: ${{ github.repository_owner != 'svalinn' || github.event_name == 'pull_request' }}
    needs: [build-housekeeping-img]
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir    
    strategy:
      matrix:
        ubuntu_versions : [18.04,]
    container: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping:ci_testing

    name: Running Housekeeping scrips
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          mkdir /root/build_dir/
          echo "REPO_SLUG=${GITHUB_REPOSITORY}" >> $GITHUB_ENV
          echo "PULL_REQUEST=$(echo  $GITHUB_REF | cut -d"/" -f3)" >> $GITHUB_ENV
          ln -s $GITHUB_WORKSPACE /root/build_dir/DAGMC

      - name: Run Housekeeping
        run: |
          cd $GITHUB_WORKSPACE
          /bin/bash "CI/scripts/housekeeping.sh"

  build-test-dagmc-img:
    needs: [build-moab-img]
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir

    strategy:
      matrix:
        ubuntu_versions : [
          18.04,
          20.04,
          ]
        compiler : [
          gcc,
          clang,
          ]
        hdf5_versions : [
         1.10.4,
        ]
        moab_versions : [
         5.3.0,
         develop,
         master,
        ]
        static_exe : [
         OFF,
         ON,
        ]
    container: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}:ci_testing

    name: Installing DAGMC
    steps:        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install DAGMC in Docker image
        uses: docker/build-push-action@v3
        with:
          file: CI/Dockerfile
          target: dagmc
          context: .
          push: false
          build-args: |
            OWNER=${{ github.repository_owner }}
            TAG=ci_testing
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
            COMPILER=${{ matrix.compiler }}
            HDF5=${{ matrix.hdf5_versions }}
            MOAB=${{ matrix.moab_versions }}
            build_mw_reg_tests=ON
          tags: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}-dagmc:ci_testing

      - name: Test DAGMC in Docker image
        uses: docker/build-push-action@v3
        with:
          file: CI/Dockerfile
          target: dagmc_test
          context: .
          push: false
          build-args: |
            OWNER=${{ github.repository_owner }}
            TAG=ci_testing
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
            COMPILER=${{ matrix.compiler }}
            HDF5=${{ matrix.hdf5_versions }}
            MOAB=${{ matrix.moab_versions }}
            build_mw_reg_tests=ON
          tags: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}-dagmc-test:ci_testing

  pushing_housekeeping_stable_img:
    if: ${{ github.repository_owner == 'svalinn' }}
    needs: [build-test-dagmc-img]
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir
    strategy:
      matrix:
        ubuntu_versions : [18.04,]

    name: Housekeeping':' latest -> stable
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image as stable img
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping:ci_testing
          dst: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping:stable

      - name: Push Image as latest img
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping:ci_testing
          dst: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping:latest

  pushing_test_stable_img:
    if: ${{ github.repository_owner == 'svalinn' }}
    needs: [build-test-dagmc-img]
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir

    strategy:
      matrix:
        ubuntu_versions : [
          18.04,
          20.04,
          ]
        compiler : [
          gcc,
          clang,
          ]
        hdf5_versions : [
         1.10.4,
        ]
        moab_versions : [
         5.3.0,
         develop,
         master,
        ]

    name: Ubuntu${{ matrix.ubuntu_versions }} + ${{ matrix.compiler }} hdf5 ${{ matrix.hdf5_versions }} + Moab ${{ matrix.moab_versions }}':' latest -> stable

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image as stable img
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}:ci_testing
          dst: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}:stable

      - name: Push Image as latest img
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}:ci_testing
          dst: ghcr.io/${{ github.repository_owner }}/dagmc-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}:latest
